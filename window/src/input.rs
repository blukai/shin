use std::hash::Hash;

// cursor

#[derive(Debug, Clone, Copy, PartialEq)]
pub enum CursorShape {
    Default,
    Pointer,
}

// pointer

#[repr(u8)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum PointerButton {
    /// equivalent to left mouse button
    Primary,
    /// equivalent to right mouse button
    Secondary,
    /// equivalent to middle mouse button
    Tertiary,
}

#[derive(Debug)]
pub enum PointerEvent {
    Motion { position: (f64, f64) },
    Press { button: PointerButton },
    Release { button: PointerButton },
}

// keyboard

/// Scancode is a hardware-generated code that corresponds to the physical key pressed on the
/// keyboard. It represents the physical location of the key regardless of the keyboard layout.
/// Scancodes are consistent across different keyboard layouts and are generated by the keyboard
/// hardware itself. For example, pressing the key in the position of "Q" on a QWERTY keyboard will
/// generate the same scancode even if the keyboard layout is AZERTY or Dvorak
///
/// (c) ai
#[repr(u32)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Scancode {
    Esc,
    W,
    A,
    S,
    D,
}

/// Keycode is a code assigned by the operating system or software that represents the symbol or
/// character mapped to the key pressed, taking into account the current keyboard layout. For
/// example, pressing the same physical key might generate a different keycode on an AZERTY
/// keyboard compared to a QWERTY keyboard because the symbol mapped to that key differs
///
/// (c) ai
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Keycode {
    Char(char),
    Unhandled,
}

#[derive(Debug, PartialEq)]
pub enum KeyboardEvent {
    Press {
        scancode: Scancode,
        keycode: Keycode,
    },
    Release {
        scancode: Scancode,
        keycode: Keycode,
    },
}
