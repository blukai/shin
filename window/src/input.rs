use std::hash::Hash;

// cursor

#[derive(Debug, Clone, Copy, PartialEq)]
pub enum CursorShape {
    Default,
    Pointer,
}

// pointer

// TODO: get rid of PointerButtons

#[repr(u8)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum PointerButton {
    /// equivalent to left mouse button
    Primary = 1,
    /// equivalent to right mouse button
    Secondary = 1 << 1,
    /// equivalent to middle mouse button
    Tertiary = 1 << 2,
}

#[derive(Debug, Default, Clone, Copy)]
pub struct PointerButtons(u8);

impl PointerButtons {
    pub fn contains(&self, which: PointerButton) -> bool {
        self.0 & which as u8 == which as u8
    }

    pub(crate) fn set(&mut self, which: PointerButton, value: bool) {
        if value {
            self.0 |= which as u8
        } else {
            self.0 &= !(which as u8);
        }
    }
}

#[derive(Debug)]
pub enum PointerEventKind {
    Motion { delta: (f32, f32) },
    Press { button: PointerButton },
    Release { button: PointerButton },
}

#[derive(Debug)]
pub struct PointerEvent {
    pub kind: PointerEventKind,
    pub position: (f32, f32),
    pub buttons: PointerButtons,
}

// keyboard

/// Scancode is a hardware-generated code that corresponds to the physical key pressed on the
/// keyboard. It represents the physical location of the key regardless of the keyboard layout.
/// Scancodes are consistent across different keyboard layouts and are generated by the keyboard
/// hardware itself. For example, pressing the key in the position of "Q" on a QWERTY keyboard will
/// generate the same scancode even if the keyboard layout is AZERTY or Dvorak
///
/// (c) ai
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Scancode {
    Esc,
    W,
    A,
    S,
    D,
}

/// TODO: make use of keycodes
///
/// Keycode is a code assigned by the operating system or software that represents the symbol or
/// character mapped to the key pressed, taking into account the current keyboard layout. For
/// example, pressing the same physical key might generate a different keycode on an AZERTY
/// keyboard compared to a QWERTY keyboard because the symbol mapped to that key differs
///
/// (c) ai
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Keycode {}

#[derive(Debug, PartialEq)]
pub enum KeyboardEventKind {
    Press { scancode: Scancode },
    Release { scancode: Scancode },
}

#[derive(Debug)]
pub struct KeyboardEvent {
    pub kind: KeyboardEventKind,
}
